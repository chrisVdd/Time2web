<?php

namespace Site\FrontBundle\Entity;

use Doctrine\ORM\EntityRepository;

/**
 * TutorialRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class TutorialRepository extends EntityRepository
{
    
    /**
    * Find all tutorials, and order by name ASC
    */
    public function findAll()
    {
        return $this->findBy(array(), array('createdAt' => 'ASC'));
    }

    /**
     * Find tutorial by User
     */
    public function findByUser($user_id)
    {
        $querybuilder = $this->createQueryBuilder('t')
                ->where('t.user=:id')
                ->setParameter('id', $user_id);

        $tutorials = $querybuilder->getQuery()
                                  ->getResult();

        return $tutorials;
    }

    /*
     * Find a tutorial by slug
     */
    public function find($slug)
    {
        $querybuilder = $this->createQueryBuilder('t')
                             ->where('t.slug=:slug')
                             ->setParameter('slug', $slug);

        $tutorial = $querybuilder->getQuery()
                                 ->getOneOrNullResult();

        return $tutorial;
    }
    
    /**
    * Find comment by Abuse
    */
    public function findByAbuse()
    {
        $querybuilder = $this->createQueryBuilder('c')
                             ->where('c.status=0');
        
        $comments = $querybuilder->getQuery()
                                ->getResult();
        
        return $comments;
    }

    /*
     * Find a tutorial by id
     */
    public function findById($id)
    {
        $querybuilder = $this->createQueryBuilder('t')
                             ->where('t.id=:id')
                             ->setParameter('id', $id);

        $tutorial = $querybuilder->getQuery()
                                 ->getOneOrNullResult();

        return $tutorial;
    }

    /*
     * Show the last 6 tutorials create
     */
    public function sixLast()
    {
        $querybuilder = $this->createQueryBuilder('t');

        $querybuilder->orderBy('t.createdAt', 'DESC');
        $querybuilder->setMaxResults(5);

        return $querybuilder->getQuery()
                            ->getResult();
    }

    /*
     * Select all tutorials for a category
     */
    public function findAllByCat($category)
    {
        
        $querybuilder = $this->createQueryBuilder('t')
                             ->where('t.category=:category')
                             ->setParameter('category', $category)
                             ->orderBy('t.title', 'ASC');
        
        $tutorials = $querybuilder->getQuery()->getResult();

        return $tutorials;
    }

    /*
     * Search by keyword
     */
    public function searchTutorial($mot_cle)
    {
        $querybuilder = $this->createQueryBuilder('t');
        $querybuilder->where($querybuilder->expr()->like('t.title', ':mot_cle'))
                     ->orWhere($querybuilder->expr()->like('t.description', ':mot_cle'))
                     ->orWhere($querybuilder->expr()->like('t.description', ':mot_cle'))
                     ->setParameter('mot_cle', '%' . $mot_cle . '%');

        $tutorials = $querybuilder->getQuery()->getResult();

        return $tutorials;
    }
    
    public function getLatestTutorial()
    {
        $querybuilder = $this->createQueryBuilder('t')
                             ->orderBy('t.createdAt', 'DESC')
                             ->setMaxResults(1)
                            ->getQuery();
        
        try
        {
            $tutorial = $querybuilder->getSingleResult();
        }catch(\Doctrine\ORM\NoResultException $e)
        {
            $tutorial = null;
        }
        
        return $tutorial;
    }
    
    public function fiveLast()
    {
        $querybuilder = $this->createQueryBuilder('t')
                             ->orderBy('t.createdAt', 'DESC')
                             ->setMaxResults(5);
        
        return $querybuilder->getQuery()->getResult();
    }

}
